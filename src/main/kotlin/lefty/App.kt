/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package lefty

import com.fasterxml.jackson.databind.ObjectMapper
import lefty.dagger.DaggerApplicationComponent
import lefty.pipeline.build.specfetcher.ConstantSpecificationProvider
import lefty.pipeline.dagger.build.BuildComponent
import lefty.pipeline.serialization.SerializedSpecification
import lefty.serialization.dagger.ForYaml
import org.slf4j.LoggerFactory
import java.nio.file.Paths
import java.util.concurrent.TimeUnit
import javax.inject.Inject
import javax.inject.Provider

class App @Inject constructor(
        @ForYaml private val yamlObjectMapper: ObjectMapper,
        private val buildBuilder: Provider<BuildComponent.Builder>
) {
    companion object {
        private val LOG = LoggerFactory.getLogger(App::class.java)
        private const val TEST_YAML = """
name: clone
steps:
  - type: builtin
    name: git
    environment:
      GIT_REPO: https://github.com/dimes/lefty.git
      GIT_BRANCH: master
  - type: custom
    image: alpine
    commands:
      - echo "Hello World"
        """
    }

    fun run() {
        val yamlSpecification = yamlObjectMapper.readValue(TEST_YAML, SerializedSpecification::class.java)
        val success = buildBuilder
                .get()
                .bindsWorkingDirectory(Paths.get("../lefty-test"))
                .bindsSpecificationProvider(ConstantSpecificationProvider(listOf(yamlSpecification.toSpecification())))
                .build()
                .build()
                .run()
                .blockingAwait(30, TimeUnit.SECONDS)

        if (success) {
            LOG.info("Successfully finished build")
        }
    }
}

fun main() {
    val applicationComponent = DaggerApplicationComponent
            .builder()
            .build()

    val app = applicationComponent.app()
    app.run()
}
